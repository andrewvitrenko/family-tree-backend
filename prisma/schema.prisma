generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tree {
  id      String   @id @default(uuid()) @db.Uuid
  name    String
  owner   User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String   @db.Uuid
  people  Person[]
}

model Person {
  id          String               @id @default(uuid()) @db.Uuid
  dateOfBirth DateTime
  dateOfDeath DateTime?
  firstName   String
  lastName    String
  sex         Sex
  treeId      String               @db.Uuid
  tree        Tree                 @relation(fields: [treeId], references: [id], onDelete: Cascade)
  userId      String?              @db.Uuid
  user        User?                @relation(fields: [userId], references: [id], onDelete: SetNull)
  children    ParentRelationship[] @relation("Parent")
  parents     ParentRelationship[] @relation("Child")
  wife        SpouseRelationship?  @relation("Husband")
  husband     SpouseRelationship?  @relation("Wife")
}

model SpouseRelationship {
  id        String @id @default(uuid()) @db.Uuid
  wifeId    String @unique @db.Uuid
  husbandId String @unique @db.Uuid
  husband   Person @relation("Husband", fields: [husbandId], references: [id], onDelete: Cascade)
  wife      Person @relation("Wife", fields: [wifeId], references: [id], onDelete: Cascade)
}

model ParentRelationship {
  id       String @id @default(uuid()) @db.Uuid
  parentId String @db.Uuid
  childId  String @db.Uuid
  parent   Person @relation("Parent", fields: [parentId], references: [id], onDelete: Cascade)
  child    Person @relation("Child", fields: [childId], references: [id], onDelete: Cascade)
}

model User {
  id            String   @id @default(uuid()) @db.Uuid
  email         String   @unique
  password      String
  firstName     String
  lastName      String
  dateOfBirth   DateTime
  sex           Sex
  trees         Tree[]
  persons       Person[]
  refreshTokens String[]
}

enum Sex {
  MALE
  FEMALE
}
